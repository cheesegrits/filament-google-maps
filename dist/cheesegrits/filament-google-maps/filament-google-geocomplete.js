(()=>{function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,i)}return o}function o(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?t(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(t,o,i){return(o=function(t){var o=function(t,o){if("object"!==e(t)||null===t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var n=i.call(t,o||"default");if("object"!==e(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===o?String:Number)(t)}(t,"string");return"symbol"===e(o)?o:String(o)}(o))in t?Object.defineProperty(t,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[o]=i,t}window.filamentGoogleGeocomplete=function(e,t){return{geocoder:null,mapEl:null,config:{debug:!1,statePath:"",gmaps:"",filterName:null,reverseGeocodeFields:{},latLngFields:{},types:[],countries:[],isLocation:!1,placeField:"formatted_address"},symbols:{"%n":["street_number"],"%z":["postal_code"],"%S":["street_address","route"],"%A1":["administrative_area_level_1"],"%A2":["administrative_area_level_2"],"%A3":["administrative_area_level_3"],"%A4":["administrative_area_level_4"],"%A5":["administrative_area_level_5"],"%a1":["administrative_area_level_1"],"%a2":["administrative_area_level_2"],"%a3":["administrative_area_level_3"],"%a4":["administrative_area_level_4"],"%a5":["administrative_area_level_5"],"%L":["locality","postal_town"],"%D":["sublocality_level_1","sublocality","political"],"%C":["country"],"%c":["country"],"%p":["premise"],"%P":["premise"]},loadGMaps:function(){if(document.getElementById("filament-google-maps-google-maps-js")){!function e(t,o){window[t]?o():setTimeout((function(){e(t,o)}),100)}("filamentGoogleMapsAPILoaded",function(){this.createAutocomplete()}.bind(this))}else{var e=document.createElement("script");e.id="filament-google-maps-google-maps-js",window.filamentGoogleMapsAsyncLoad=this.createAutocomplete.bind(this),e.src=this.config.gmaps+"&callback=filamentGoogleMapsAsyncLoad",document.head.appendChild(e)}},init:function(e){this.mapEl=e,this.config=o(o({},this.config),t),this.loadGMaps()},createAutocomplete:function(){var e=this;window.filamentGoogleMapsAPILoaded=!0;var t=["address_components","formatted_address","geometry","name"];t.includes(this.config.placeField)||t.push(this.config.placeField);var o={fields:t,strictBounds:!1,types:this.config.types},i=this.config.isLocation?this.config.statePath+"-fgm-address":this.config.statePath,n=document.getElementById(i);if(n){window.addEventListener("keydown",(function(e){if(("U+000A"===e.key||"Enter"===e.key||"Enter"===e.code)&&"INPUT"===e.target.nodeName&&"text"===e.target.type)return e.preventDefault(),!1}),!0);var a=new google.maps.places.Autocomplete(n,o);a.setComponentRestrictions({country:this.config.countries}),a.addListener("place_changed",(function(){var t=a.getPlace();t.geometry&&t.geometry.location?(e.setLocation(t),e.updateReverseGeocode(t),e.updateLatLng(t)):window.alert("No details available for input: '"+t.name+"'")}));var r=document.getElementById(this.config.statePath+"-geolocate");r&&(this.geocoder=new google.maps.Geocoder,r.addEventListener("click",(function(t){"geolocation"in navigator&&navigator.geolocation.getCurrentPosition((function(t){var o={lat:t.coords.latitude,lng:t.coords.longitude};e.geocoder.geocode({location:o}).then((function(t){t.results[0]&&(n.setAttribute("value",t.results[0].formatted_address),e.setLocation(t.results[0]),e.updateReverseGeocode(t.results[0]),e.updateLatLng(t.results[0]))}))}))})))}},setLocation:function(t){if(this.config.isLocation?e.set(this.config.statePath,t.geometry.location):e.set(this.config.statePath,t[this.config.placeField]),this.config.filterName){var o=this.config.filterName+".latitude",i=this.config.filterName+".longitude",n=document.getElementById(o),a=document.getElementById(i);n&&a&&(n.setAttribute("value",t.geometry.location.lat().toString()),a.setAttribute("value",t.geometry.location.lng().toString()),e.set(o,t.geometry.location.lat().toString()),e.set(i,t.geometry.location.lng().toString()))}},updateReverseGeocode:function(t){if(Object.keys(this.config.reverseGeocodeFields).length>0&&t.address_components){var o=this.getReplacements(t.address_components);for(var i in this.config.reverseGeocodeFields){var n=this.config.reverseGeocodeFields[i];for(var a in o)n=n.split(a).join(o[a]);for(var r in this.symbols)n=n.split(r).join("");n=n.trim(),e.set(i,n)}}},updateLatLng:function(t){Object.keys(this.config.latLngFields).length>0&&t.geometry&&(e.set(this.config.latLngFields.lat,t.geometry.location.lat().toString()),e.set(this.config.latLngFields.lng,t.geometry.location.lng().toString()))},getReplacements:function(e){var t=this,o={};return e.forEach((function(e){for(var i in t.symbols)-1!==t.symbols[i].indexOf(e.types[0])&&(i===i.toLowerCase()?o[i]=e.short_name:o[i]=e.long_name)})),this.config.debug&&console.log(o),o}}}})();
//# sourceMappingURL=filament-google-geocomplete.js.map
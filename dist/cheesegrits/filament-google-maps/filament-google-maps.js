(()=>{var e,t={825:()=>{function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return o(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);"Object"===a&&e.constructor&&(a=e.constructor.name);if("Map"===a||"Set"===a)return Array.from(e);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return o(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var o=0,a=new Array(t);o<t;o++)a[o]=e[o];return a}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function n(t,o,a){return(o=function(t){var o=function(t,o){if("object"!==e(t)||null===t)return t;var a=t[Symbol.toPrimitive];if(void 0!==a){var r=a.call(t,o||"default");if("object"!==e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===o?String:Number)(t)}(t,"string");return"symbol"===e(o)?o:String(o)}(o))in t?Object.defineProperty(t,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[o]=a,t}window.filamentGoogleMaps=function(e,o){return{map:null,geocoder:null,marker:null,markerLocation:null,layers:null,mapEl:null,pacEl:null,config:{debug:!1,autocomplete:"",types:[],countries:[],placeField:"formatted_address",autocompleteReverse:!1,geolocate:!1,geolocateOnLoad:!1,geolocateLabel:"Set Current Location",draggable:!0,clickable:!1,defaultLocation:{lat:0,lng:0},statePath:"",controls:{mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0,searchBoxControl:!1,zoomControl:!1},drawingModeL:null,drawingControl:!1,drawingControlPosition:6,drawingModes:{marker:!0,circle:!0,rectangle:!0,polygon:!0,polyline:!0},drawingField:null,layers:[],geoJson:null,geoJsonField:null,geoJsonProperty:null,geoJsonVisible:!0,reverseGeocodeFields:{},defaultZoom:8,reverseGeocodeUsing:!1,placeUpdatedUsing:!1,gmaps:""},symbols:{"%n":["street_number"],"%z":["postal_code"],"%S":["street_address","route"],"%A1":["administrative_area_level_1"],"%A2":["administrative_area_level_2"],"%A3":["administrative_area_level_3"],"%A4":["administrative_area_level_4"],"%A5":["administrative_area_level_5"],"%a1":["administrative_area_level_1"],"%a2":["administrative_area_level_2"],"%a3":["administrative_area_level_3"],"%a4":["administrative_area_level_4"],"%a5":["administrative_area_level_5"],"%L":["locality","postal_town"],"%D":["sublocality"],"%C":["country"],"%c":["country"],"%p":["premise"],"%P":["premise"]},drawingManager:null,overlays:[],dataLayer:null,geoJsonDataLayer:null,polyOptions:{strokeColor:"#00ff00",strokeOpacity:"0.5",strokeWeight:3,fillOpacity:.45,draggable:!0,editable:!1,clickable:!0},selectedShape:null,placesService:null,placeFields:[],loadGMaps:function(){if(document.getElementById("filament-google-maps-google-maps-js")){!function e(t,o){window[t]?o():setTimeout((function(){e(t,o)}),100)}("filamentGoogleMapsAPILoaded",function(){this.createMap()}.bind(this))}else{var e=document.createElement("script");e.id="filament-google-maps-google-maps-js",window.filamentGoogleMapsAsyncLoad=this.createMap.bind(this),e.src=this.config.gmaps+"&callback=filamentGoogleMapsAsyncLoad",document.head.appendChild(e)}},init:function(e,t){this.mapEl=e,this.pacEl=t,this.config=r(r({},this.config),o),this.loadGMaps()},createMap:function(){var o=this;if(window.filamentGoogleMapsAPILoaded=!0,(this.config.autocompleteReverse||Object.keys(this.config.reverseGeocodeFields).length>0)&&(this.geocoder=new google.maps.Geocoder),this.map=new google.maps.Map(this.mapEl,r({center:this.getCoordinates(),zoom:this.config.defaultZoom},this.config.controls)),this.marker=new google.maps.Marker({draggable:this.config.draggable,map:this.map}),this.marker.setPosition(this.getCoordinates()),this.config.clickable&&this.map.addListener("click",(function(e){o.markerMoved(e)})),this.config.draggable&&google.maps.event.addListener(this.marker,"dragend",(function(e){o.markerMoved(e)})),this.config.controls.searchBoxControl){var a=this.pacEl,n=new google.maps.places.SearchBox(a);this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(a),n.addListener("places_changed",(function(){a.value="",o.markerLocation=n.getPlaces()[0].geometry.location}))}if(this.config.placeUpdatedUsing&&(this.placesService=new google.maps.places.PlacesService(this.map)),this.placeFields=["address_components","formatted_address","geometry","name"],this.placeFields.includes(this.config.placeField)||this.placeFields.push(this.config.placeField),this.config.placeUpdatedUsing&&this.placeFields.push("photos"),this.config.autocomplete){var i=document.getElementById(this.config.autocomplete);if(i){window.addEventListener("keydown",(function(e){if(("U+000A"===e.key||"Enter"===e.key||"Enter"===e.code)&&"INPUT"===e.target.nodeName&&"text"===e.target.type)return e.preventDefault(),!1}),!0);var s={fields:this.placeFields,strictBounds:!1,types:this.config.types},l=new google.maps.places.Autocomplete(i,s);l.setComponentRestrictions({country:this.config.countries}),l.addListener("place_changed",(function(){var t=l.getPlace();t.geometry&&t.geometry.location?(t.geometry.viewport?o.map.fitBounds(t.geometry.viewport):o.map.setCenter(t.geometry.location),e.set(o.config.autocomplete,t[o.config.placeField]),o.marker.setPosition(t.geometry.location),o.markerLocation=t.geometry.location,o.setCoordinates(t.geometry.location),o.updateGeocodeFromAddressComponents(t.address_components),o.config.placeUpdatedUsing&&e.placeUpdatedUsing(o.config.statePath,t)):window.alert("No details available for input: '"+t.name+"'")}))}}if(this.config.layers&&(this.layers=this.config.layers.map((function(e){new google.maps.KmlLayer({url:e,map:o.map}).addListener("click",(function(e){e.featureData.description}))}))),this.config.geoJson&&(this.config.geoJsonVisible?this.geoJsonDataLayer=this.map.data:this.geoJsonDataLayer=new google.maps.Data,/^http/.test(this.config.geoJson)?this.geoJsonDataLayer.loadGeoJson(this.config.geoJson):this.geoJsonDataLayer.addGeoJson(JSON.parse(this.config.geoJson))),this.config.geolocateOnLoad&&this.getLocation(),this.config.geolocate&&"geolocation"in navigator){var g=document.createElement("button");g.textContent=this.config.geolocateLabel,g.classList.add("custom-map-control-button"),this.map.controls[google.maps.ControlPosition.TOP_CENTER].push(g),g.addEventListener("click",(function(e){e.preventDefault(),o.getLocation()}))}if(this.config.drawingControl&&(this.map.data.setStyle({clickable:!1,cursor:null,draggable:!1,editable:!1,fillOpacity:0,visible:!1}),this.drawingManager=new google.maps.drawing.DrawingManager({drawingMode:null,drawingControl:!0,drawingControlOptions:{position:this.config.drawingControlPosition,drawingModes:[].concat(t(this.config.drawingModes.marker?[google.maps.drawing.OverlayType.MARKER]:[]),t(this.config.drawingModes.circle?[google.maps.drawing.OverlayType.CIRCLE]:[]),t(this.config.drawingModes.polygon?[google.maps.drawing.OverlayType.POLYGON]:[]),t(this.config.drawingModes.polyline?[google.maps.drawing.OverlayType.POLYLINE]:[]),t(this.config.drawingModes.rectangle?[google.maps.drawing.OverlayType.RECTANGLE]:[]))},markerOptions:{draggable:!0},polylineOptions:{draggable:!0,editable:!1},rectangleOptions:this.polyOptions,circleOptions:this.polyOptions,polygonOptions:this.polyOptions}),this.drawingManager.setMap(this.map),google.maps.event.addListener(this.drawingManager,"drawingmode_changed",(function(){o.clearSelection()})),this.config.drawingField)){this.dataLayer=new google.maps.Data;var c=e.get(this.config.drawingField);c&&this.loadFeaturesCollection(JSON.parse(c)),google.maps.event.addListener(this.drawingManager,"overlaycomplete",(function(e){e.overlay.type=e.type,e.overlay.id=o.guid(),e.overlay.feature=o.instanceFeature(e.overlay),o.addOverlayEvents(e.overlay),o.overlays.push(e.overlay),e.type!=google.maps.drawing.OverlayType.MARKER&&(o.drawingManager.setDrawingMode(null),o.setSelection(e.overlay)),o.drawingModified()}))}},markerMoved:function(t){var o=this;this.geoJsonContains(t.latLng),this.markerLocation=t.latLng.toJSON(),this.setCoordinates(this.markerLocation),this.updateFromLocation(this.markerLocation),this.map.panTo(this.markerLocation),this.config.placeUpdatedUsing&&t.placeId&&this.placesService.getDetails({placeId:t.placeId,fields:this.placeFields},(function(t,a){"OK"===a&&e.placeUpdatedUsing(o.config.statePath,t)}))},updateMapFromAlpine:function(){var e=this.getCoordinates(),t=this.marker.getPosition();e.lat===t.lat()&&e.lng===t.lng()||(this.updateFromLocation(e),this.updateMap(e))},updateMap:function(e){this.marker.setPosition(e),this.map.panTo(e)},updateFromLocation:function(t){var o=this;(this.hasReverseGeocode()||this.hasReverseAutocomplete())&&this.geocoder.geocode({location:t}).then((function(t){o.updateGeocodeFromAddressComponents(t.results[0].address_components),o.updateAutocompleteFromFormattedAddress(t.results[0].formatted_address),o.config.reverseGeocodeUsing&&e.reverseGeocodeUsing(o.config.statePath,t)})).catch((function(e){console.log(e.message)}))},updateGeocodeFromAddressComponents:function(t){if(this.hasReverseGeocode()){var o=this.getReplacements(t);for(var a in this.config.reverseGeocodeFields){var r=this.config.reverseGeocodeFields[a];for(var n in o)r=r.split(n).join(o[n]);for(var i in this.symbols)r=r.split(i).join("");r=r.trim(),e.set(a,r)}}},updateGeocodeFromLocation:function(e){var t=this;this.hasReverseGeocode()&&this.geocoder.geocode({location:e}).then((function(e){return e.results[0].address_components})).then((function(e){return t.updateGeocodeFromAddressComponents(e)})).catch((function(e){console.log(e.message)}))},updateAutocompleteFromFormattedAddress:function(t){this.hasReverseAutocomplete()&&e.set(this.config.autocomplete,t)},updateAutocompleteFromLocation:function(t){var o=this;this.hasReverseAutocomplete()&&this.geocoder.geocode({location:t}).then((function(t){t.results[0]&&e.set(o.config.autocomplete,t.results[0].formatted_address)})).catch((function(e){console.log(e.message)}))},hasReverseAutocomplete:function(){return this.config.autocomplete&&this.config.autocompleteReverse},hasReverseGeocode:function(){return Object.keys(this.config.reverseGeocodeFields).length>0||this.config.reverseGeocodeUsing},setCoordinates:function(t){e.set(this.config.statePath,t)},getCoordinates:function(){var t=e.get(this.config.statePath);return null!==t&&t.hasOwnProperty("lat")||(t={lat:this.config.defaultLocation.lat,lng:this.config.defaultLocation.lng}),t},getLocation:function(){var e=this;navigator.geolocation.getCurrentPosition((function(t){e.markerLocation={lat:t.coords.latitude,lng:t.coords.longitude},e.setCoordinates(e.markerLocation),e.updateFromLocation(e.markerLocation),e.map.panTo(e.markerLocation)}))},getReplacements:function(e){var t=this,o={};return e.forEach((function(e){for(var a in t.symbols)-1!==t.symbols[a].indexOf(e.types[0])&&(a===a.toLowerCase()?o[a]=e.short_name:o[a]=e.long_name)})),this.config.debug&&console.log(o),o},instanceOverlay:function(e){var t=null;switch(e.properties.type){case google.maps.drawing.OverlayType.MARKER:t=new google.maps.Marker({id:e.properties.id,type:e.properties.type,position:new google.maps.LatLng(e.geometry.coordinates[1],e.geometry.coordinates[0]),draggable:!0});break;case google.maps.drawing.OverlayType.RECTANGLE:var o=new google.maps.LatLng(e.geometry.coordinates[0][2][1],e.geometry.coordinates[0][2][0]),a=new google.maps.LatLng(e.geometry.coordinates[0][0][1],e.geometry.coordinates[0][0][0]);t=new google.maps.Rectangle(Object.assign({},this.polyOptions,{id:e.properties.id,type:e.properties.type,bounds:new google.maps.LatLngBounds(a,o),editable:!1}));break;case google.maps.drawing.OverlayType.POLYGON:t=new google.maps.Polygon(Object.assign({},this.polyOptions,{id:e.properties.id,type:e.properties.type,paths:this.transformToMVCArray(e.geometry.coordinates),editable:!1}));break;case google.maps.drawing.OverlayType.POLYLINE:t=new google.maps.Polyline({id:e.properties.id,type:e.properties.type,path:this.transformToMVCArray([e.geometry.coordinates]).getAt(0),draggable:!0,editable:!1});break;case google.maps.drawing.OverlayType.CIRCLE:t=new google.maps.Circle(Object.assign({},this.polyOptions,{id:e.properties.id,type:e.properties.type,center:new google.maps.LatLng(e.geometry.coordinates[1],e.geometry.coordinates[0]),radius:e.properties.radius,editable:!1}))}return t},instanceFeature:function(e){var t=this.calculateGeometry(e);return this.dataLayer.add(new google.maps.Data.Feature({geometry:t.geometry,properties:Object.assign({id:this.guid(),type:e.type},t.hasOwnProperty("properties")?t.properties:{})}))},calculateGeometry:function(e,t){switch(e.type){case google.maps.drawing.OverlayType.MARKER:return t?new google.maps.Data.Point(e.getPosition()):{geometry:new google.maps.Data.Point(e.getPosition())};case google.maps.drawing.OverlayType.RECTANGLE:var o=e.getBounds(),a=[o.getSouthWest(),{lat:o.getSouthWest().lat(),lng:o.getNorthEast().lng()},o.getNorthEast(),{lng:o.getSouthWest().lng(),lat:o.getNorthEast().lat()}];return t?new google.maps.Data.Polygon([a]):{geometry:new google.maps.Data.Polygon([a])};case google.maps.drawing.OverlayType.POLYGON:return t?new google.maps.Data.Polygon([e.getPath().getArray()]):{geometry:new google.maps.Data.Polygon([e.getPath().getArray()])};case google.maps.drawing.OverlayType.POLYLINE:return t?new google.maps.Data.LineString(e.getPath().getArray()):{geometry:new google.maps.Data.LineString(e.getPath().getArray())};case google.maps.drawing.OverlayType.CIRCLE:return t?new google.maps.Data.Point(e.getCenter()):{properties:{radius:e.getRadius()},geometry:new google.maps.Data.Point(e.getCenter())}}},transformToMVCArray:function(e){var t=new google.maps.MVCArray;return function e(o,a){2!=o.length||Array.isArray(o[0])||Array.isArray(o[1])||a.push(new google.maps.LatLng(o[1],o[0]));for(var r=0;r<o.length;r++)Array.isArray(o[r])&&e(o[r],a?2!=o[r].length||Array.isArray(o[r][0])||Array.isArray(o[r][1])?a.getAt(a.push(new google.maps.MVCArray)-1):a:t.getAt(t.push(new google.maps.MVCArray)-1))}(e),t},loadFeaturesCollection:function(e){if(Array.isArray(e.features)&&e.features.length>0){for(var t=new google.maps.LatLngBounds,o=0;o<e.features.length;o++){var a=this.instanceOverlay(e.features[o]);a.feature=this.instanceFeature(a),this.addOverlayEvents(a),a.feature.getGeometry().forEachLatLng((function(e){t.extend(e)})),a.setMap(this.map),this.overlays.push(a)}this.map.fitBounds(t)}},addOverlayEvents:function(e){var t=this;switch(e.type){case google.maps.drawing.OverlayType.POLYLINE:google.maps.event.addListener(e.getPath(),"set_at",(function(){e.drag||(e.feature.setGeometry(t.calculateGeometry(e,!0)),t.drawingModified())})),google.maps.event.addListener(e.getPath(),"insert_at",(function(){e.feature.setGeometry(t.calculateGeometry(e,!0)),t.drawingModified()})),google.maps.event.addListener(e.getPath(),"remove_at",(function(){e.feature.setGeometry(t.calculateGeometry(e,!0)),t.drawingModified()}));break;case google.maps.drawing.OverlayType.POLYGON:for(var o=e.getPaths(),a=0;a<o.getLength();a++)for(var r=0;r<o.getAt(a).getLength();r++)google.maps.event.addListener(o.getAt(a),"set_at",(function(){e.drag||(e.feature.setGeometry(t.calculateGeometry(e,!0)),t.drawingModified())})),google.maps.event.addListener(o.getAt(a),"insert_at",(function(){e.feature.setGeometry(t.calculateGeometry(e,!0)),t.drawingModified()})),google.maps.event.addListener(o.getAt(a),"remove_at",(function(){e.feature.setGeometry(t.calculateGeometry(e,!0)),t.drawingModified()}));break;case google.maps.drawing.OverlayType.RECTANGLE:google.maps.event.addListener(e,"bounds_changed",(function(){e.drag||(e.feature.setGeometry(t.calculateGeometry(e,!0)),t.drawingModified())}));break;case google.maps.drawing.OverlayType.CIRCLE:google.maps.event.addListener(e,"radius_changed",(function(){e.feature.setProperty("radius",t.calculateGeometry(e).properties.radius),t.drawingModified()}))}if(e.type!==google.maps.drawing.OverlayType.MARKER){var n=this;google.maps.event.addListener(e,"click",(function(e){n.setSelection(this)}))}google.maps.event.addListener(e,"dragstart",(function(){e.drag=!0})),google.maps.event.addListener(e,"mouseup",(function(){e.drag&&(e.drag=!1,e.feature.setGeometry(t.calculateGeometry(e,!0)),t.drawingModified())}))},drawingModified:function(){var t=this;this.config.drawingField&&this.dataLayer.toGeoJson((function(o){e.set(t.config.drawingField,JSON.stringify(o))}))},guid:function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},setSelection:function(e){this.clearSelection(),this.selectedShape=e,this.overlays.forEach((function(t){e&&t.id==e.id?(t.getEditable()?e.setOptions({strokeColor:"#00ff00",strokeOpacity:"0.5"}):e.setOptions({strokeColor:"#ff0000",strokeOpacity:"0.8"}),t.setEditable(!t.getEditable())):t.setEditable(!1)}))},clearSelection:function(){this.selectedShape=null,this.overlays.forEach((function(e){e.setEditable(!1),e.setOptions({strokeColor:"#00ff00",strokeOpacity:"0.5"})}))},geoJsonContains:function(t){var o=this;if(this.config.geoJson&&this.config.geoJsonField){var a,r=[],n=new google.maps.Data;this.geoJsonDataLayer.forEach((function(e){if("Polygon"===e.getGeometry().getType()){var a=new google.maps.Polygon({path:e.getGeometry().getAt(0).getArray()});google.maps.geometry.poly.containsLocation(t,a)&&(o.config.geoJsonProperty?r.push(e.getProperty(o.config.geoJsonProperty)):n.add(e))}})),this.config.geoJsonProperty?(a=JSON.stringify(r),e.set(this.config.geoJsonField,a)):n.toGeoJson((function(t){a=JSON.stringify(t),e.set(o.config.geoJsonField,a)}))}}}}},3:()=>{}},o={};function a(e){var r=o[e];if(void 0!==r)return r.exports;var n=o[e]={exports:{}};return t[e](n,n.exports,a),n.exports}a.m=t,e=[],a.O=(t,o,r,n)=>{if(!o){var i=1/0;for(c=0;c<e.length;c++){for(var[o,r,n]=e[c],s=!0,l=0;l<o.length;l++)(!1&n||i>=n)&&Object.keys(a.O).every((e=>a.O[e](o[l])))?o.splice(l--,1):(s=!1,n<i&&(i=n));if(s){e.splice(c--,1);var g=r();void 0!==g&&(t=g)}}return t}n=n||0;for(var c=e.length;c>0&&e[c-1][2]>n;c--)e[c]=e[c-1];e[c]=[o,r,n]},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={471:0,822:0};a.O.j=t=>0===e[t];var t=(t,o)=>{var r,n,[i,s,l]=o,g=0;if(i.some((t=>0!==e[t]))){for(r in s)a.o(s,r)&&(a.m[r]=s[r]);if(l)var c=l(a)}for(t&&t(o);g<i.length;g++)n=i[g],a.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return a.O(c)},o=self.webpackChunkfilament_google_maps=self.webpackChunkfilament_google_maps||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))})(),a.O(void 0,[822],(()=>a(825)));var r=a.O(void 0,[822],(()=>a(3)));r=a.O(r)})();
//# sourceMappingURL=filament-google-maps.js.map